{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YuyunChen\\\\IdeaProjects\\\\doordash-app\\\\src\\\\components\\\\FoodList.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Button, Card, List, message, Select, Tooltip } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { addItemToCart, getMenus, getRestaurants } from \"../utils\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst AddToCartButton = ({\n  itemId\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n\n  const AddToCart = () => {\n    setLoading(true);\n    addItemToCart(itemId).then(() => message.success(`Successfully add item`)).catch(err => message.error(err.message)).finally(() => {\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: \"Add to shopping cart\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      loading: loading,\n      type: \"primary\",\n      icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 23\n      }, this),\n      onClick: AddToCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddToCartButton, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n\n_c = AddToCartButton;\n\nconst FoodList = () => {\n  _s2();\n\n  const [foodData, setFoodData] = useState([]);\n  const [curRest, setCurRest] = useState();\n  const [restaurants, setRestaurants] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingRest, setLoadingRest] = useState(false);\n  useEffect(() => {\n    setLoadingRest(true);\n    getRestaurants().then(data => {\n      setRestaurants(data);\n    }).catch(err => {\n      message.error(err.message);\n    }).finally(() => {\n      setLoadingRest(false);\n    });\n  }, []);\n  useEffect(() => {\n    if (curRest) {\n      setLoading(true);\n      getMenus(curRest).then(data => {\n        setFoodData(data);\n      }).catch(err => {\n        message.error(err.message);\n      }).finally(() => {\n        setLoading(false);\n      });\n    }\n  }, [curRest]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      value: curRest,\n      onSelect: value => setCurRest(value),\n      placeholder: \"Select a restaurant\",\n      loading: loadingRest,\n      style: {\n        width: 300\n      },\n      onChange: () => {},\n      children: restaurants.map(item => {\n        return /*#__PURE__*/_jsxDEV(Option, {\n          value: item.id,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), curRest && /*#__PURE__*/_jsxDEV(List, {\n      style: {\n        marginTop: 20\n      },\n      loading: loading,\n      grid: {\n        gutter: 16,\n        xs: 1,\n        sm: 2,\n        md: 4,\n        lg: 4,\n        xl: 3,\n        xxl: 3\n      },\n      dataSource: foodData,\n      renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: item.name,\n          extra: /*#__PURE__*/_jsxDEV(AddToCartButton, {\n            itemId: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 40\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.imageUrl,\n            alt: item.name,\n            style: {\n              height: 340,\n              width: \"100%\",\n              display: \"block\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this), `Price: ${item.price}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(FoodList, \"L/vhZzlgbAaDwOLVAWG5p6d2gZ8=\");\n\n_c2 = FoodList;\nexport default FoodList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddToCartButton\");\n$RefreshReg$(_c2, \"FoodList\");","map":{"version":3,"sources":["C:/Users/YuyunChen/IdeaProjects/doordash-app/src/components/FoodList.js"],"names":["Button","Card","List","message","Select","Tooltip","useEffect","useState","addItemToCart","getMenus","getRestaurants","PlusOutlined","Option","AddToCartButton","itemId","loading","setLoading","AddToCart","then","success","catch","err","error","finally","FoodList","foodData","setFoodData","curRest","setCurRest","restaurants","setRestaurants","loadingRest","setLoadingRest","data","value","width","map","item","id","name","marginTop","gutter","xs","sm","md","lg","xl","xxl","imageUrl","height","display","price"],"mappings":"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","sourcesContent":["import { Button, Card, List, message, Select, Tooltip } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { addItemToCart, getMenus, getRestaurants } from \"../utils\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst AddToCartButton = ({ itemId }) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const AddToCart = () => {\r\n        setLoading(true);\r\n        addItemToCart(itemId)\r\n            .then(() => message.success(`Successfully add item`))\r\n            .catch((err) => message.error(err.message))\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Tooltip title=\"Add to shopping cart\">\r\n            <Button\r\n                loading={loading}\r\n                type=\"primary\"\r\n                icon={<PlusOutlined />}\r\n                onClick={AddToCart}\r\n            />\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nconst FoodList = () => {\r\n    const [foodData, setFoodData] = useState([]);\r\n    const [curRest, setCurRest] = useState();\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingRest, setLoadingRest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setLoadingRest(true);\r\n        getRestaurants()\r\n            .then((data) => {\r\n                setRestaurants(data);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                setLoadingRest(false);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (curRest) {\r\n            setLoading(true);\r\n            getMenus(curRest)\r\n                .then((data) => {\r\n                    setFoodData(data);\r\n                })\r\n                .catch((err) => {\r\n                    message.error(err.message);\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }, [curRest]);\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                value={curRest}\r\n                onSelect={(value) => setCurRest(value)}\r\n                placeholder=\"Select a restaurant\"\r\n                loading={loadingRest}\r\n                style={{ width: 300 }}\r\n                onChange={() => {}}\r\n            >\r\n                {restaurants.map((item) => {\r\n                    return <Option value={item.id}>{item.name}</Option>;\r\n                })}\r\n            </Select>\r\n            {curRest && (\r\n                <List\r\n                    style={{ marginTop: 20 }}\r\n                    loading={loading}\r\n                    grid={{\r\n                        gutter: 16,\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 4,\r\n                        lg: 4,\r\n                        xl: 3,\r\n                        xxl: 3,\r\n                    }}\r\n                    dataSource={foodData}\r\n                    renderItem={(item) => (\r\n                        <List.Item>\r\n                            <Card\r\n                                title={item.name}\r\n                                extra={<AddToCartButton itemId={item.id} />}\r\n                            >\r\n                                <img\r\n                                    src={item.imageUrl}\r\n                                    alt={item.name}\r\n                                    style={{ height: 340, width: \"100%\", display: \"block\" }}\r\n                                />\r\n                                {`Price: ${item.price}`}\r\n                            </Card>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FoodList;"]},"metadata":{},"sourceType":"module"}